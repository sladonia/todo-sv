syntax = 'proto3';

package todo;

option go_package = "/todopb";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

message Task {
  string id = 1;
  string title = 2;
  string description = 3;
  repeated string tags = 4;
  bool is_important = 5;
}

message Project {
  string id = 1;
  string name = 2;
  string owner_id = 3;
  repeated string participants = 4;
  map<string, Task> tasks = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  string version = 8;
}

message CreateProjectRequest {
  string name = 1;
  string owner_id = 2;
  repeated string participants = 3;
}

message UpdateProjectRequest {
  string project_id = 1;
  string name = 2;
  string owner_id = 3;
  repeated string participants = 4;
}

message AllProjectsRequest {
  string owner_id = 1;
}

message AllProjectsResponse {
  repeated Project projects = 1;
}

message AddTaskRequest {
  string title = 1;
  string project_id = 2;
  string description = 3;
  repeated string tags = 4;
  bool is_important = 5;
}

message ReplaceTaskRequest {
  string task_id = 1;
  string title = 2;
  string project_id = 3;
  string description = 4;
  repeated string tags = 5;
  bool is_important = 6;
}

message DeleteTaskRequest {
  string project_id = 1;
  string task_id = 2;
}

message DeleteProjectRequest {
  string project_id = 1;
}

message ProjectsUpdatesRequest {
  string user_id = 1;
}

service ToDoService {
  rpc CreateProject(CreateProjectRequest) returns (Project) {};
  rpc UpdateProject(UpdateProjectRequest) returns (google.protobuf.Empty) {};
  rpc AllProjects(AllProjectsRequest) returns (AllProjectsResponse) {};
  rpc AddTask(AddTaskRequest) returns (google.protobuf.Empty) {};
  rpc ReplaceTask(ReplaceTaskRequest) returns (google.protobuf.Empty) {};
  rpc DeleteTask(DeleteTaskRequest) returns (google.protobuf.Empty) {};
  rpc DeleteProject(DeleteProjectRequest) returns (google.protobuf.Empty) {};
  rpc ProjectsUpdates(ProjectsUpdatesRequest) returns (stream Project) {};
}
